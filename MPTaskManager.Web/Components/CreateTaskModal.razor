@using MPTaskManager.Api.DTOs
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">

<div class="modal show d-block" tabindex="-1" style="background: rgba(0,0,0,0.5); z-index: 1050;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Criar Nova Tarefa</h5>
                <button type="button" class="btn-close" @onclick="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Título</label>
                    <input class="form-control" @bind="Model.Title" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Descrição</label>
                    <textarea class="form-control" @bind="Model.Description"></textarea>
                </div>
                <div class="mb-3">
                    <label class="form-label">Data</label>
                    <input type="datetime-local" class="form-control" @bind="Model.DueDate" />
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" @onclick="Close">Cancelar</button>
                <button class="btn btn-success" @onclick="Save">Criar</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public TaskItemCreateRequestDTO Model { get; set; } = new();
    [Parameter] public EventCallback<TaskItemCreateRequestDTO> OnSave { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private async Task Save()
    {
        if (OnSave.HasDelegate)
        {
            await OnSave.InvokeAsync(Model);
        }
    }

    private async Task Close()
    {
        if (OnClose.HasDelegate)
        {
            await OnClose.InvokeAsync();
        }
    }
}